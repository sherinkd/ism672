<!-- Annual Orders for Employees. -->
@using NWTradersWeb.Models
@model IEnumerable<OrderProducts>
@{
    string year = ViewBag.Year;
    string employee = ViewBag.Employee;
}

<div id="AnnualOrders">
    <div class="container py-2">
        <div class="row">
            <div class="sub-header">
                <h4>Orders Per Year</h4>
            </div>
            <div class="sub-body">
                <div class="container">
                    <div class="row">
                        <div class="col-6">Company Average:</div>
                        <div class="col-6">@ViewBag.CompanyAverageAnnualOrders.ToString("#,##0.00")</div>
                    </div>
                    <div class="row">
                        <div class="col-6">Your Average:</div>
                        <div class="col-6">@ViewBag.EmployeeAverageAnnualOrders.ToString("#,##0.00")</div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="sub-header">
                <h4>@year Orders of @employee</h4>
            </div>
            <div class="sub-body-no-max">
                <div class="container">
                    <div class="row" id="Table">

                    </div>
                    <br />
                    <div class="row" id="Chart">

                    </div>
                    <br />
                    <div class="row" id="Pie">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="">

    $(document).ready(function () {
        google.charts.setOnLoadCallback(DrawAnnualOrdersChart('Chart'));


    function DrawAnnualOrdersChart(divName)
    {

        $(function () {
            var year = $('#SelectYear').val();
            var employee = $('#SelectEmployee').val();

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAnnualOrders", "Employees")',
                data: { Year: '@year', Employee: '@employee' },
                success: function (chartsdata) {
                    debugger;
                    var Data = chartsdata.JSONList;
                    var data = new google.visualization.DataTable();
                    var dataForTable = new google.visualization.DataTable();

                    data.addColumn('string', 'Year');
                    data.addColumn('number', 'Orders');

                    dataForTable.addColumn('string', 'Years');
                    dataForTable.addColumn('number', 'Number Of Orders');

                    //Loop through each element in the list data
                    for (var i = 0; i < Data.length; i++)
                    {
                        data.addRow([
                            Data[i].DateString,
                            Data[i].NumberOfOrders,
                        ]);

                        dataForTable.addRow([
                            Data[i].DateString,
                            Data[i].NumberOfOrders
                        ]);
                    }

                    // Coloring the columns.
                    var rainbow = new Rainbow();
                    if (Data.length > 1) {
                        rainbow.setNumberRange(1, data.getNumberOfRows());
                        rainbow.setSpectrum('steelblue', 'goldenrod'); // get data.nRows colors between this range.

                        //Add a column to specify the color
                        data.addColumn({ 'type': 'string', 'role': 'style' });

                        // for each row in the datatable, add a new color by asking "rainbow" for a color.
                        for (var i = 0; i < data.getNumberOfRows(); i++) {
                            data.setCell(i, 2, '' + rainbow.colorAt(i + 1) + '');
                        }


                        var view = new google.visualization.DataView(data);
                        view.setColumns(
                            [0, 1, 2,
                                { calc: "stringify", sourceColumn: 1, type: "string", role: "annotation" }]);
                    }
                    else {
                        var view = new google.visualization.DataView(data);
                        view.setColumns(
                            [0, 1,
                                { calc: "stringify", sourceColumn: 1, type: "string", role: "annotation" }]);

                    }

                    var columnChartOptions =
                    {
                        fontName: 'Tahoma',
                        dataOpacity: 0.8,
                        legend: { position: "none" },

                        vAxis:
                        {
                            title: 'Orders',
                            titleTextStyle: { fontSize: 12, italic: false },
                            textStyle: { fontName: 'Tahoma', fontSize: 12, italic: false  },
                        },

                        hAxis:
                        {
                            title: 'Year',
                            titleTextStyle: { fontSize: 12, italic: false },
                            textStyle: { fontName: 'Tahoma', fontSize: 12 },
                        },
                    };

                    var pieChartOptions =
                    {
                        titlePosition: 'none',
                        dataOpacity: 0.8,
                        legend: { position: "bottom" },
                        chartArea: { height: "75%", width: "100%" },

                    };

                    // Draw a data table to show the values.
                    var classNames = {
                        tableCell: 'gTableCell',
                        headerRow: 'h5',
                    };

                    var tableOptions = {
                        allowHtml: true,
                        cssClassNames: classNames,
                        width: '100%',
                    };


                    // Instantiate and draw our chart, passing in options
                    //var chartColumns = new google.visualization.ColumnChart(document.getElementById(divName));
                    var chart = new google.visualization.ColumnChart(document.getElementById(divName));
                    var chartPie = new google.visualization.PieChart(document.getElementById("Pie"));
                    var table = new google.visualization.Table(document.getElementById('Table'));
                    table.draw(dataForTable, tableOptions);
                    chart.draw(view, columnChartOptions);
                    chartPie.draw(view, pieChartOptions);

                },

                error: function () { alert("Error loading data! Please try again."); }

            });
        })
    }
    });


    function ShowAnnualOrders(year)
    {
        $.ajax({
            url: '@Url.Action("AnnualOrdersModal", "Employees")',
            data: { Year: year},

            success: function (result)
            { $('#AnnualOrders').html(result); },

            error: function ()
            { $('#AnnualOrders').html('Error in generating Orders Chart for ' + year); }

        });

    }

</script>


<script type="text/javascript">

    function RefreshPage()
    {
        var year = $('#SelectYear').val();
        var employee = $('#SelectEmployee').val();
        debugger;
        $(function () {

            $.ajax({
                type: 'GET',
                url: '@Url.Action("AnnualOrders", "Employees")',
                data: { Year: year, Employee: employee },

                success: function (partialViewResult)
                { $("#AnnualOrders").html(partialViewResult);}
            });
        })
    }
</script>
